name: CI/CD

on:
  push:
    branches: 
      - master
      - release/Test
  pull_request:
    branches: 
      - master
      - release/Test

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api: [HotelInformationAPI, RoomReservationAPI, UserRegistrationAPI]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        path: release/Test

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.x'
        
    - name: Install Chrome and ChromeDriver
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        LATEST=$(wget -q -O - https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
        wget https://chromedriver.storage.googleapis.com/$LATEST/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/

    - name: Install Dependencies
      run: dotnet restore release/Test/HotelBookingSystemSolution.sln

    - name: Build
      run: dotnet build release/Test/HotelBookingSystemSolution.sln --no-restore

    - name: Run Tests noN Graphic
      run: dotnet test release/Test/HotelBookingSystemSolution.sln --no-build --verbosity normal --filter TestCategory!=UITest
      env:
        TOKEN_KEY_SECRET: ${{ secrets.TOKEN_KEY_SECRET }}
        DB_STRING_SECRET: ${{ secrets.DB_STRING_SECRET }}

    - name: Run Tests Selenium
      run: dotnet test release/Test/HotelBookingSystemSolution.sln --no-build --verbosity normal --filter TestCategory=UITest
      continue-on-error: true
      env:
        TOKEN_KEY_SECRET: ${{ secrets.TOKEN_KEY_SECRET }}
        DB_STRING_SECRET: ${{ secrets.DB_STRING_SECRET }}
        
    - name: Publish API
      run: |
          echo "Publishing HotelInformationAPI..."
          dotnet publish release/Test/HotelInformationAPI/HotelInformationAPI.csproj -c Release -o release/Test/HotelInformationAPI/publish/HotelInformationAPI
          echo "Published HotelInformationAPI to release/Test/HotelInformationAPI/publish/HotelInformationAPI"
          
          echo "Publishing RoomReservationAPI..."
          dotnet publish release/Test/RoomReservationAPI/RoomReservationAPI.csproj -c Release -o release/Test/RoomReservationAPI/publish/RoomReservationAPI
          echo "Published RoomReservationAPI to release/Test/RoomReservationAPI/publish/RoomReservationAPI"
          echo "Publishing RoomReservationAPI..."
          
          dotnet publish release/Test/UserRegistrationAPI/UserRegistrationAPI.csproj -c Release -o release/Test/UserRegistrationAPI/publish/UserRegistrationAPI
          echo "Published UserRegistrationAPI to release/Test/UserRegistrationAPI/publish/UserRegistrationAPI"
    
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: release_artifact
        path: release/Test/
        retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: my-release_artifact

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MAX_TOKEN }} # Utilisation du GITHUB_TOKEN automatique
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
        

    - name: Compress Published APIs
      run: |
        ls
        cd ./HotelInformationAPI/
        ls
        
        cd ./publish/
        ls
        zip -r HotelInformationAPI.zip release/Test/HotelInformationAPI/publish/HotelInformationAPI
        zip -r RoomReservationAPI.zip release/Test/RoomReservationAPI/publish/RoomReservationAPI
        zip -r UserRegistrationAPI.zip release/Test/UserRegistrationAPI/publish/UserRegistrationAPI

    - name: Upload Release Assets - HotelInformationAPI
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MAX_TOKEN }} # Utilisation du GITHUB_TOKEN automatique
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./HotelInformationAPI.zip
        asset_name: HotelInformationAPI.zip
        asset_content_type: application/zip

    - name: Upload Release Assets - RoomReservationAPI
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MAX_TOKEN }} # Utilisation du GITHUB_TOKEN automatique
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./RoomReservationAPI.zip
        asset_name: RoomReservationAPI.zip
        asset_content_type: application/zip

    - name: Upload Release Assets - UserRegistrationAPI
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MAX_TOKEN }} # Utilisation du GITHUB_TOKEN automatique
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./UserRegistrationAPI.zip
        asset_name: UserRegistrationAPI.zip
        asset_content_type: application/zip
