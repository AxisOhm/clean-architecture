name: CI/CD

on:
  push:
    branches: 
      - master
      - release
  pull_request:
    branches: 
      - master
      - release

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api: [HotelInformationAPI, RoomReservationAPI, UserRegistrationAPI]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.x' # Utilisation de .NET 8

    - name: Install dependencies
      run: dotnet restore HotelBookingSystemSolution.sln # Restaurer les dépendances pour la solution entière

    - name: Build
      run: dotnet build HotelBookingSystemSolution.sln --no-restore # Construire la solution entière

    - name: Run tests
      run: dotnet test HotelBookingSystemSolution.sln --no-build --verbosity normal # Exécuter les tests pour la solution entière

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.x'

    - name: Log branch name
      run: echo "Current branch is ${{ github.ref }}"

    - name: Log condition
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/release" ]]; then
          echo "Condition met for deployment"
        else
          echo "Condition not met for deployment"
        fi

    - name: Publish to Azure
      env:
        AZURE_WEBAPP_NAME: clean-architecture 
        AZURE_RESOURCE_GROUP: clean-archi
        AZURE_PUBLISH_PROFILE: ${{ secrets.TEST_SECRET }} # Assurez-vous d'ajouter votre profil de publication en tant que secret GitHub
      run: |
        for api in HotelInformationAPI RoomReservationAPI UserRegistrationAPI; do
          dotnet publish $api/$api.csproj -c Release -o $api/publish
          az webapp deploy --name $AZURE_WEBAPP_NAME --resource-group $AZURE_RESOURCE_GROUP --src-path $api/publish
        done
